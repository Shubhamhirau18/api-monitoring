
services:
  # Main monitoring application
  monitoring:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: brightedge-monitoring
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      - prometheus
      - mailhog
    restart: unless-stopped
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "python", "monitor.py", "--test-config"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus for metrics storage and collection
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: brightedge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--log.level=info'
    restart: unless-stopped
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/api/v1/status/config"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for visualization
  grafana:
    image: grafana/grafana:12.0.2
    container_name: brightedge-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_LOG_LEVEL=info
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    restart: unless-stopped
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: brightedge-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    environment:
      - MH_STORAGE=memory
      - MH_HOSTNAME=mailhog.local
      - MH_UI_BIND_ADDR=0.0.0.0:8025
      - MH_API_BIND_ADDR=0.0.0.0:8025
    restart: unless-stopped
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  monitoring-network:
    driver: bridge
    name: brightedge-monitoring

volumes:
  prometheus_data:
    name: devops_poc_prometheus_data
  grafana_data:
    name: devops_poc_grafana_data