apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-app
  namespace: monitoring-system
  labels:
    app.kubernetes.io/name: monitoring-app
    app.kubernetes.io/part-of: brightedge-monitoring
    app.kubernetes.io/component: application
    app.kubernetes.io/version: "1.0"
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: monitoring-app
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: monitoring-app
        app.kubernetes.io/part-of: brightedge-monitoring
        app.kubernetes.io/component: application
        app.kubernetes.io/version: "1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        config.checksum/monitoring: "default"
    spec:
      serviceAccountName: monitoring-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: monitoring-app
          image: brightedge-monitoring:latest
          imagePullPolicy: Never # For Kind local development
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: CONFIG_PATH
              value: "/app/config/monitoring_config.yaml"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: LOG_LEVEL
              value: "INFO"
            - name: PROMETHEUS_MULTIPROC_DIR
              value: "/tmp/prometheus_multiproc"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: prometheus-multiproc
              mountPath: /tmp/prometheus_multiproc
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30
      volumes:
        - name: config
          configMap:
            name: monitoring-config
            defaultMode: 0644
        - name: tmp
          emptyDir: {}
        - name: prometheus-multiproc
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - monitoring-app
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "monitoring-system"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      terminationGracePeriodSeconds: 30
